################## ch2 ##################
# boxplot of cypress pine

rm(list=ls())

# case one: cypress pine data
x <- c(20, 36, 38, 39, 48, 56, 68, 73, 73, 75, 80, 122)
x.b <- boxplot(x)
x.b$stats
Q1 <- x.b$stats[2]
Q3 <- x.b$stats[4]
IQR <- Q3 - Q1
L <- Q1 - 1.5 * IQR
U <- Q3 + 1.5 * IQR
boxplot(x, boxwex = 0.4, staplewex = 0.2, ylim = c(-20, 150))
h <- rep(1, length = length(x))
points(h, x, pch = 20)
points(c(1,1), c(L,U), pch = 2)
# end of file


################## ch5 ##################
# compare habitats of two kinds of warbler
# bay-breasted, blackburnian
rm(list=ls())

bay <- c(17, 10, 13, 12, 13, 11, 13, 16, 17, 19)
black <- c(15, 17, 17, 18, 15, 16, 17, 24, 20, 16, 24, 15)
warbler <- c(bay, black)
index <- c(rep(1, length = length(bay)), rep(2, length = length(black)))
cbind(warbler, index)
boxplot(warbler ~ index, ylab = "height of branch", xlab = "warbler",
boxwex = 0.3, staplewex = 0.2)
stripchart(warbler ~ index, method = "stack", pch= 20)
# end of file



################## ch6 ##################

ht wt pht pwt mht mwt
172 81 168 62 166 62
183 70 175 90 170 65
173 75 179 87 168 80
175 55 171 80 160 65
179 65 NA NA 165 55
164 49 175 65 155 52
148 46 161 80 150 54
172 62 178 NA 160 NA
170 70 168 69 170 78
171 59 168 60 158 48
172 60 178 90 157 52
163 64 167 87 160 68
180 80 176 74 160 48
171 58 168 65 155 50
155 68 172 70 154 64
175 62 170 57 157 60
166 52 170 67 168 59
160 48 172 70 158 50
170 62 170 60 162 45
174 77 171 71 155 47
165 50 172 70 158 42
158 47 173 75 157 60
165 55 168 72 160 58
176 70 170 80 155 51
173 58 180 90 169 75
178 65 180 83 158 47
172 65 163 67 155 48
161 53 174 68 163 55
179 70 176 70 163 56
177 86 172 68 158 52

height gender
168 1
175 1
179 1
171 1
175 1
161 1
178 1
168 1
168 1
178 1
167 1
176 1
168 1
172 1
170 1
170 1
172 1
170 1
171 1
172 1
173 1
168 1
170 1
180 1
180 1
163 1
174 1
176 1
172 1
166 1
170 1
168 2
160 2
165 2
155 2
150 2
160 2
170 2
158 2
157 2
160 2
160 2
155 2
154 2
157 2
168 2
158 2
162 2
155 2
158 2
157 2
160 2
155 2
169 2
158 2
155 2
163 2
163 2
158 2



# external data file
rm(list=ls())

data.0 <- read.table("c:/body_height_parents.txt", header=T)
data.0
attach(data.0)
boxplot(height ~ gender)
stripchart(height ~ gender, pch = 20, method = "stack", ylim = c(0,5))
detach(data.0)
# end of file


################## ch7 ##################
help.start() -> packages -> stats -> B -> Binomial

rm(list=ls())
n <- 20
p <- 0.25
x <- 0:20
f <- dbinom(x, size = n, prob = p)
barplot(f, space = 0, col = "yellow", names.arg = as.character(0:20))

# poisson approximate binomial
rm(list=ls())
n <- 20
p <- 0.05
x <- 12
prob.b <- dbinom(0:x, size = n, prob = p)
prob.p <- dpois(0:x, lambda = n*p)
p.c <- rbind(prob.b, prob.p)
p.max <- max(p.c)
colnames(p.c) <- as.character(0:x)
rownames(p.c) <- c("binomial", "Poisson")
barplot(p.c, legend.text = T, beside = T, col = c("yellow", "red"),
ylim = c(0, p.max))
# end of program


################## ch8 ##################
#normal approximation graph
n <- 50
p <- 1/6
m <- n*p
s <- sqrt(n*p*(1-p))
pnorm(6+1/2, mean = m, sd = s)

# normal approximation graph

rm(list=ls())

# input 4 arguments
n <- 20
p <- 0.2
p.l.end <- 4.5
p.r.end <- 10.5

# draw a normal curve
mu <- n * p
sigma <- sqrt(n * p * (1 - p))
lower <- mu - 3*sigma
upper <- mu + 3*sigma
x <- 0:n
y <- seq(lower, upper, length = 1000)
f.y <- dnorm(y, mean = mu, sd = sigma)
plot(y, f.y, type = "l", lty = 3, xlim = c(min(0, lower), max(upper, n)))
index <- (p.l.end <= y) & (y <= p.r.end)

# highlight the approximated area with red color
y.seg <- y[index]
f.seg <- f.y[index]
x.a <- c(p.l.end, y.seg, p.r.end)
f.a <- c( 0, f.seg, 0)
polygon(x.a, f.a, col = "red")

# draw a binomial distribution
f.x <- dbinom(x, size = n, prob = p)
x.right <- x + 0.5
x.left <- x - 0.5
n.1 <- n + 1
for(i in 1:n.1){
a <- x.left[i]
b <- f.x[i]
lines(c(a, a), c(0, b), lty = 1)
}
for(i in 1:n.1){
a <- x.right[i]
b <- f.x[i]
lines(c(a, a), c(0, b), lty = 1)
}
for(i in 1:n.1){
y <- f.x[i]
lines(c(x.left[i], x.right[i]), c(y, y), lty = 1)
}
# end of file


################## ch9 ##################
# Figure 3.11
rm(list=ls())
x <- seq(-4, 4, length = 1000)
f.x <- dnorm(x, mean = 0, sd = 1)
plot(x, f.x, type = "l", lty = 1, axes = F, lwd = 1,
xlab = "z value", ylab = "")
axis(1, at = c(-4, -3, -2, -1, 0, +1, +2, +3, +4), tick = T, pos = 0,
label = c("-4", "-3", "-2", "-1", "mu", "+1", "+2", "+3", "+4"))
lines(c(-1, -1), c(0, dnorm(-1)), lty = 3)
lines(c(1,1), c(0, dnorm(1)), lty = 3)
lines(c(-2,-2), c(0, dnorm(-2)), lty = 1)
lines(c(2,2), c(0, dnorm(2)), lty = 1)
points(-1, dnorm(-1), pch = 19)
points(1, dnorm(1), pch = 19)
# end of file

# Figure 3.12
rm(list=ls())
x <- seq(-3.5, 3.5, length = 1000)
x.1 <- x + 1
x.2 <- x + 2
f.x <- dnorm(x, mean = 0, sd =1)
plot(x, f.x, xlim = c(-3.5, 5.5), ylim = c(0, 1), type = "n", lty = 1,
xlab = "z alue", ylab = "", axes = F)
lines(x, f.x, lty = 1)
lines(x.1, f.x, lty = 2)
lines(x.2, f.x, lty = 3)
location <- c(-4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6)
loc.label <- c("", "-3", "-2", "-1", "0", "1", "2", "3", "4", "5", "")
axis(1, at = location, tick = T, pos = 0, label = loc.label)
text(0, 0.5, label = "mu=0")
text(1, 0.5, label = "mu=1")
text(2, 0.5, label = "mu=2")
# end of file


################## ch10 ##################
# sampling distribution of sample mean (pin data)
# input the collected data (sample total)
rm(list=ls())
# input data
n <- 10
y.dat <- scan()
4 6 6 8 6 2 5 5 1 2
4 6 7 3 4 3 4 7 4 4
3 0 5 3 2 6 1 5 3 5
7 2 1 3 4 6 5 6 2 3
1 5 2 4 4 3 4 1 2 7
4 3 4 3 5 2 6 4 4 4
5 3 3 5 4 2 3 6 2 2
2 2 4 2 5 3 4 3 5 6
5 5 2 5 4 2 7 3 3 4
2 4 6 4 5 2 4 3 3 3


# construct relative frequency table
# draw an empirical sampling distribution of mean
p.hat <- y.dat/n
table(y.dat)
freq.0 <- table(p.hat)
freq <- rep(0, length = 11)
index <- as.numeric(names(freq.0))*n + 1
freq[index] <- freq.0
names(freq) <- as.character(0:10)
rf <- freq/sum(freq)
plot((0:n)/n, rf, type="h",
main="line chart--pin data", axes = F, ylim = c(0, 0.30),
xlab = "sample mean (p.hat)", ylab = "relative frequency")
loci <- (0:n)/n
axis(1, at = loci, tick = T, label = as.character(loci), pos = 0)
loci.2 <- c(0, 5, 10, 15, 20, 25, 30)/100
axis(2, at = loci.2, tick = T, label = c("", "0.05", "0.10", "0.15", "0.20", "0.25", ""))

# find the theoretical probabilities
p.tilde <- mean(p.hat)
p.tilde
p.y <- dbinom((0:n), size = n, prob = p.tilde)
rf.hat <- p.y
rf.hat <- round(p.y, digits = 3)
p.h <- (0:n)/n
cbind(p.h, rf, rf.hat)

# check whether the empirical distn follow a binomial distn
x2 <- 100*sum((rf - p.y)^2/p.y)
df <- (n + 1) - 1 - 1
x2.c <- qchisq(0.95, df)
cbind(x2, x2.c)
f.pair <- rbind(rf, rf.hat)
rownames(f.pair) <- c("rf", "rf.hat")
barplot(f.pair, beside = T, legend.text = T, col = c("red", "yellow"))
# end of program


################## ch14 ##################
# heart beat analysis
# y: heart beat of leopard frog
# x: temperature in Celcius
rm(list=ls())

# data input
hb <- scan()
5 11 11 14 22 23 32 29 32

temp <- scan()
2 4 6 8 10 12 14 16 18

x <- temp
y <- hb

# drawing a scatter graph
plot(x, y, type = "p", pch= 20, xlim = c(0, 20), ylim = c(0, 40))
fm <- lm(y ~ x)
anova(fm)
summary(fm)
y.hat <- predict(fm)
lines(x, y.hat, lty = 3)

# prediction
data.new <- data.frame(x = c(5,15))
y.p <- predict(fm, newdata = data.new, interval = "confidence")
y.p
# end of file


################## ch15 ##################
rm(list=ls())
x <- scan()
10.7 11.0 9.5 11.1 10.3 10.7 9.9 10.6 10.0 12.0

y <- scan()
5.8 6.0 5.0 6.0 5.3 5.8 5.2 5.7 5.3 6.3

plot(x, y, type = "p", pch = 19)
cor.test(x, y, method = "pearson")

rm(list=ls())
x <- 1:12
y <- scan()
53 47 32 42 35 32 37 38 27 24 29 27

cor.test(x, y, method = "kendall", alternative = "less")
plot(x, y, type = "p", pch = 19)

rm(list=ls())
x <- 1:12
y <- scan()
8.73 5.62 13.74 -2.60 -0.16 2.95 -3.38 -6.83 -6.16 -7.71 -0.93 -3.27

plot(x, y, type = "p", pch = 19)
cor.test(x, y, method = "spearman")


################## ch16 ##################
# diet effect on life expectancy of rats

rm(list=ls())
y <- scan()
2.5 3.1 2.3 1.9 2.4
2.7 3.1 2.9 3.7 3.5
3.1 2.9 3.8 3.9 4.0


diet <- scan()
1 1 1 1 1 2 2 2 2 2 3 3 3 3 3


d <- factor(diet)
stripchart(y ~ d, pch = 1, xlim = c(0, 5), ylim = c(0,5))
y.bar <- tapply(y, diet, mean)
points(y.bar, c(1,2,3), pch = 19)

fm <- lm(y ~ d)
summary(fm)
anova(fm)
y.bar
pairwise.t.test(y, d, p.adjust.method = "bonferroni")
# ebd of file

DMRT <- function(nt, n.v, mse){
dfe <- sum(n.v) - nt
r.v <- c()
for(i in 2: nt){
p <- (1 - 0.05)^(i - 1)
r.p <- qtukey(p, i, dfe)
r.v <- c(r.v, r.p)
}
print(r.v)
n <- 1/(mean(1/n.v))
SSR <- r.v * sqrt(mse/n)
print(SSR)
combo <- rbind(r.v, SSR)
print(combo)
}
# rat diet example
# nt = 3, n.v = c(5,5,5), mse = 0.203
DMRT(3, c(5,5,5), 0.203)
# end of file


